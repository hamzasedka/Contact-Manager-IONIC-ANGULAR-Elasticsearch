@mixin create-font($font-size, $font-weight) {
  font-size: $font-size;
  font-weight: $font-weight;
}

@mixin create-input($width, $height, $font-size, $font-weight) {
  width: $width;
  height: $height;
  @include create-font($font-size, $font-weight);
}

@mixin fixed-height($height) {
  min-height: $height;
  height: $height;
  max-height: $height;
}

@mixin mat-table-columns($columns) {
  .mat-column- {
    @each $colName, $props in $columns {
      $width: map-get($props, 'width');

      &#{$colName} {
        flex: $width;
        min-width: $width;

        @if map-has-key($props, 'color') {
          color: map-get($props, 'color');
        }
      }
    }
  }
}


@mixin snackbar($theme) {
  $primary: mat-color(map-get($theme, primary));
  $primary-text: mat-color(map-get($theme, primary), default-contrast);
  $warn: mat-color(map-get($theme, warn));
  $warn-text: mat-color(map-get($theme, warn), default-contrast);

  .default-notification {
    color: $primary-text;
    background-color: $primary;
  }
  .default-notification .mat-simple-snackbar-action  {
    color: $primary-text;
  }

  .success-notification {
    color: green;
    background-color: $primary;
  }
  .success-notification .mat-simple-snackbar-action  {
    color: green;
  }

  .error-notification {
    color: $warn-text;
    background-color: $warn;
  }
  .error-notification .mat-simple-snackbar-action {
    color: $warn-text;
  }

  .warning-notification {
    color: yellow;
    background-color: $warn;
  }
  .warning-notification .mat-simple-snackbar-action {
    color: yellow;
  }
}
